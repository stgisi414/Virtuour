
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Chatroom rules
    match /chatrooms/{chatroomId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null &&
        request.resource.data.keys().hasAll(['areaId', 'areaName', 'createdAt']) &&
        request.resource.data.areaId == chatroomId;
      allow update: if request.auth != null && 
        (
          // Allow updating message count and last message time
          (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['messageCount', 'lastMessageAt'])) ||
          // Allow admins to update chatroom settings (only if chatroom exists and user is admin)
          (exists(/databases/$(database)/documents/chatrooms/$(chatroomId)) &&
           resource.data.keys().hasAny(['admins']) && 
           request.auth.uid in resource.data.admins)
        );
      
      // Message rules
      match /messages/{messageId} {
        allow read: if request.auth != null && 
          // Check message hasn't expired
          resource.data.expiresAt > request.time &&
          // Check if user is not banned (only if chatroom exists)
          (!exists(/databases/$(database)/documents/chatrooms/$(chatroomId)) ||
           !get(/databases/$(database)/documents/chatrooms/$(chatroomId)).data.keys().hasAny(['bannedUsers']) ||
           !(request.auth.uid in get(/databases/$(database)/documents/chatrooms/$(chatroomId)).data.bannedUsers));
          
        allow create: if request.auth != null && 
          // User can only create messages with their own userId
          request.resource.data.userId == request.auth.uid &&
          // Message must have required fields
          request.resource.data.keys().hasAll(['text', 'userId', 'userName', 'timestamp', 'expiresAt']) &&
          // Expiry time must be within 48 hours
          request.resource.data.expiresAt <= request.time + duration.value(48, 'h') &&
          // Check if user is not banned (only if chatroom exists)
          (!exists(/databases/$(database)/documents/chatrooms/$(chatroomId)) ||
           !get(/databases/$(database)/documents/chatrooms/$(chatroomId)).data.keys().hasAny(['bannedUsers']) ||
           !(request.auth.uid in get(/databases/$(database)/documents/chatrooms/$(chatroomId)).data.bannedUsers));
          
        allow delete: if request.auth != null && 
          (
            // Message author can delete their own message
            resource.data.userId == request.auth.uid ||
            // Admins can delete any message (only if chatroom exists and user is admin)
            (exists(/databases/$(database)/documents/chatrooms/$(chatroomId)) &&
             get(/databases/$(database)/documents/chatrooms/$(chatroomId)).data.keys().hasAny(['admins']) &&
             request.auth.uid in get(/databases/$(database)/documents/chatrooms/$(chatroomId)).data.admins)
          );
      }
    }
  }
}
